events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

stream {
    map $ssl_preread_server_name $backend {
        ~^cdn[1-3]\..*$ 127.0.0.1:8443;
        default 127.0.0.1:444;
    }

    server {
        listen 443;
        listen [::]:443;
        proxy_pass $backend;
        ssl_preread on;
        proxy_protocol off;
        proxy_timeout 10s;
        proxy_connect_timeout 3s;
    }
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security headers
    server_tokens off;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Health check endpoint
    server {
        listen 9000;
        server_name localhost;
        
        location /health {
            access_log off;
            return 200 '{"status":"healthy","service":"stealthflow-server","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        location /metrics {
            access_log off;
            proxy_pass http://127.0.0.1:9001/metrics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
    
    # Main server
    server {
        listen 80;
        server_name ${DOMAIN} cdn1.${DOMAIN} cdn2.${DOMAIN} cdn3.${DOMAIN};
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/html;
            try_files $uri =404;
        }
        
        # Redirect to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # HTTPS server for fallback
    server {
        listen 8080 ssl http2;
        server_name ${DOMAIN} cdn1.${DOMAIN} cdn2.${DOMAIN} cdn3.${DOMAIN};
        
        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        root /var/www/html;
        index index.html index.htm;
        
        location / {
            try_files $uri $uri/ =404;
        }
        
        # Block common attack patterns
        location ~ /\. {
            deny all;
        }
        
        location ~* \.(env|git|svn|htaccess|htpasswd)$ {
            deny all;
        }
    }
}
